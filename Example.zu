module Example

fun Nat  : Type       = T : Type -> (T -> T) -> T -> T
fun zero : Nat        = \T, succ, zero -> zero
fun succ : Nat -> Nat = \next, T, succ, zero -> succ (next T succ zero)

fun nat = \T, succ, zero -> succ (succ zero)

@eval succ zero Int (\prev -> 10) 20
